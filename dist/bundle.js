(()=>{let e;async function t(t){if(!t)return;await chrome.storage.local.set({timeStamps:[]}),await chrome.storage.local.set({isTranscribable:!1});let o=0;new MutationObserver(((t,n)=>{e=document.getElementsByClassName("video-stream")[0],o+=1;const s=document.querySelector('button[aria-label="Show transcript"]');if(s){const e=document.querySelector("div#panels.style-scope.ytd-watch-flexy");e.style.display="flex",function(e,t){e.click(),new MutationObserver(((e,o)=>{const n=document.querySelector("#segments-container");if(n){const e=n.childNodes;console.log(e),console.log(e.length),t.style.display="none",o.disconnect(),async function(e){let t="";for(let o=0;o<e.length;o++)null===e[o].getAttribute("hidden")&&(console.log(e[o]),t+="::"+e[o].childNodes[2].ariaLabel.toLowerCase());const o=t.split("::");o.shift(),await chrome.storage.local.set({timeStamps:o}),await chrome.storage.local.set({isTranscribable:!0})}(e)}})).observe(t,{childList:!0,subtree:!0})}(s,e),n.disconnect()}o>=20&&(console.log("Exceeded observation limit, disconnecting observer"),n.disconnect())})).observe(document.body,{childList:!0,subtree:!0})}chrome.runtime.onMessage.addListener(((t,o,n)=>{const{type:s,value:c}=t;"PLAY"===s&&(e.currentTime=c)})),window.addEventListener("DOMContentLoaded",(()=>{t(window.location.href.includes("youtube.com/watch"))})),window.addEventListener("yt-page-data-updated",(()=>{t(window.location.href.includes("youtube.com/watch"))}))})();